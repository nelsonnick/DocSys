2016-10-21 16:06:56  [ qtp1993134103-17:0 ] - [ DEBUG ]  Couldn't find template in cache for "src/login.html"("zh_CN", UTF-8, parsed); will try to load it.
2016-10-21 16:06:56  [ qtp1993134103-17:3 ] - [ DEBUG ]  TemplateLoader.findTemplateSource("src/login.html"): Found
2016-10-21 16:06:56  [ qtp1993134103-17:4 ] - [ DEBUG ]  Loading template for "src/login.html"("zh_CN", UTF-8, parsed) from "C:\\Users\\Administrator\\IdeaProjects\\DocSys\\src\\main\\webapp\\src\\login.html"
2016-10-21 16:06:56  [ qtp1993134103-17:61 ] - [ DEBUG ]  Key "error" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@1702d980=public java.lang.Object java.util.HashMap.get(java.lang.Object), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@22c93592, java.lang.Object@7e65302f={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@12938692, public void java.util.HashMap.clear()=[Ljava.lang.Class;@4c8b8712, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@1606a6c3, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@7d086434, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@73a1da11, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@63027060, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@4011f27d, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@7e06178f, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@30a3b0c, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@73fbca7d, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@3cb65c65, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@72429e13, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@20c2090c, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@dc7974b, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@39cb7e2, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@65c80384, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@55f2fc58, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@64be4462, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@27bccb0, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@270a2b58, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@65d803dd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@73d3d650, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2f918ad6, public int java.util.HashMap.size()=[Ljava.lang.Class;@59b73497}, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@7c541297, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@1f765fef=freemarker.ext.beans.OverloadedMethods@11d82a1b, class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
